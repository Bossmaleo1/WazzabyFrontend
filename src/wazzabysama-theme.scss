@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$wazzaby-primary: mat-palette($mat-blue,A200);
$wazzaby-accent:  mat-palette($mat-blue, A200, A100, A400);

// The warn palette is optional (defaults to red).
$wazzaby-warn:    mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
$wazzaby-theme: mat-light-theme($wazzaby-primary, $wazzaby-accent, $wazzaby-warn);

// Define an alternate dark theme.
$dark-primary: mat-palette($mat-blue,A200);
$dark-accent:  mat-palette($mat-blue, A200, A100, A400);
$dark-warn:    mat-palette($mat-red);
$dark-theme: mat-light-theme($wazzaby-primary, $wazzaby-accent, $wazzaby-warn);

// Include the dark color styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.unicorn-dark-theme {
  @include angular-material-theme($dark-theme);
}

.unicorn-light-theme {
  @include angular-material-theme($wazzaby-theme);
}


